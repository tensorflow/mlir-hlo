/* Copyright 2022 The IREE Authors
   Copyright 2023 OpenXLA Authors. All Rights Reserved.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
==============================================================================*/

#ifndef STABLEHLO_TO_LINALG_PASSES
#define STABLEHLO_TO_LINALG_PASSES

include "mlir/Pass/PassBase.td"

def StablehloLegalizeToLinalgPass
    : Pass<"stablehlo-legalize-to-linalg"> {
  let summary = "Legalize StableHLO to LinAlg";
  let dependentDialects = [
    "mlir::bufferization::BufferizationDialect",
    "mlir::complex::ComplexDialect",
    "mlir::linalg::LinalgDialect",
    "mlir::math::MathDialect",
    "mlir::memref::MemRefDialect",
    "mlir::scf::SCFDialect",
    "mlir::shape::ShapeDialect",
    "mlir::sparse_tensor::SparseTensorDialect",
  ];
  let options = [Option<"enablePrimitiveOps", "enable-primitive-ops", "bool",
                        /*default=*/"false",
                        "Lower to primitive Linalg ops (map, reduce and "
                        "transpose) when possible, instead of linalg.generic">,
                 Option<"enableSparseOps", "enable-sparse-ops", "bool",
                        /*default=*/"false",
                        "Lower to Sparse Tensor ops (sparse_tensor.concatenate)"
                        "when possible, instead of linalg.generic">,
                 Option<"captureScalarInputs", "capture-scalar-inputs", "bool",
                        /*default=*/"true",
                        "Capture scalar inputs in generic ops instead of"
                        "passing as tensor-scalar argument.">];
}

#endif  // STABLEHLO_TO_LINALG_PASSES
